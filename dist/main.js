/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/clientServerManager.js":
/*!************************************!*\
  !*** ./src/clientServerManager.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientServerManager: () => (/* binding */ ClientServerManager)\n/* harmony export */ });\n\r\n\r\nclass ClientServerManager\r\n{\r\n    constructor(useServer = false)\r\n    {\r\n        this._useServer = useServer;\r\n    }\r\n\r\n    async fetchSavedContent()\r\n    {\r\n        if (this._useServer) throw new Error(\"To implement\");\r\n        let content = localStorage.getItem(\"ce_dassault_sport_compte_local\");\r\n        if (content == null)\r\n            return {};\r\n        try\r\n        {\r\n            return JSON.parse(content)\r\n        }\r\n        catch(e)\r\n        {\r\n            console.error(e);\r\n        }\r\n        console.log(\"fetch\", content);\r\n        return content;\r\n    }\r\n\r\n    async saveContent(content)\r\n    {\r\n        if (this._useServer) throw new Error(\"To implement\");\r\n        console.log(\"push\", content);\r\n        localStorage.setItem(\"ce_dassault_sport_compte_local\", content.toJson());\r\n    }\r\n\r\n    async clear()\r\n    {\r\n        localStorage.removeItem(\"ce_dassault_sport_compte_local\");\r\n    }\r\n};\n\n//# sourceURL=webpack://cse_ds_hm_xls/./src/clientServerManager.js?");

/***/ }),

/***/ "./src/dataModel.js":
/*!**************************!*\
  !*** ./src/dataModel.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompanyEnum: () => (/* binding */ CompanyEnum),\n/* harmony export */   Data: () => (/* binding */ Data),\n/* harmony export */   Expense: () => (/* binding */ Expense),\n/* harmony export */   GroupsEnum: () => (/* binding */ GroupsEnum),\n/* harmony export */   Info: () => (/* binding */ Info),\n/* harmony export */   User: () => (/* binding */ User)\n/* harmony export */ });\n\r\n\r\nlet STATIC_USER_COUNT = 1;\r\nlet STATIC_EXPENSE_COUNT = 0;\r\n\r\nconst GroupsEnum = {\r\n    Guide: \"Guide\",\r\n    Location: \"Location\",\r\n    Logement: \"Logement\",\r\n    Transport: \"Transport\",\r\n    Misc: \"Misc\"\r\n};\r\n\r\nconst DEFAULT_GROUPS = Object.values(GroupsEnum);\r\n\r\nconst DEFAULT_RULES = {\r\n    \"Guide\" : { ratio: 0.6 },\r\n    \"Location\" : { ratio: 0.5 },\r\n    \"Transport\" : { ratio: 0.5 },\r\n    \"Logement\" : { ratio: 0.5,  maxi_pp: 50 }\r\n};\r\nconst CompanyEnum = {\r\n    DS: \"DS\",\r\n    DSExt: \"DS (Ext)\",\r\n    DA: \"DA\",\r\n    DAExt: \"DA (Ext)\"\r\n};\r\nconst DEFAULT_SUPER_USER = {\r\n    firstname: \"Dassault\", name: \"Sport\",\r\n    company: CompanyEnum.DA, isSuperUser : true\r\n};\r\n\r\nclass BaseJson\r\n{\r\n    constructor(){}\r\n    toJson()\r\n    {\r\n        let tmp = {};\r\n        for (let [k,v] of Object.entries(this))\r\n        {\r\n            if (k.startsWith(\"_\")) continue;\r\n            tmp[k] = v;\r\n        }\r\n        return tmp;\r\n    }\r\n}\r\n\r\nclass Info extends BaseJson\r\n{\r\n    constructor(input)\r\n    {\r\n        super();\r\n        this.title = input?.title || \"-Nom de la sortie-\";\r\n        this.destination = input?.destination || \"X\";\r\n        this.type = input?.type || \"X\";\r\n        this.start = input?.start || \"DD-MM-YYYY\";\r\n        this.end = input?.end || \"DD-MM-YYYY\";\r\n        this.responsible = input?.responsible || \"X\";\r\n    }\r\n}\r\n\r\nclass User extends BaseJson\r\n{\r\n    constructor (input)\r\n    {\r\n        super();\r\n        if (typeof input == \"string\")\r\n        {\r\n            input = JSON.parse(input);\r\n        }\r\n        this.company = input.company || CompanyEnum.DS;\r\n        this.isSuperUser = input.isSuperUser || false;\r\n        let id;\r\n        if (this.isSuperUser)\r\n        {\r\n            id = 0;\r\n        }\r\n        else if (input.id != null)\r\n        {\r\n            STATIC_USER_COUNT = Math.max(STATIC_USER_COUNT, input.id);\r\n            id = input.id;\r\n        }\r\n        else\r\n            id = ++STATIC_USER_COUNT;\r\n\r\n        this.id = id;\r\n        this.name = input.name || `${this.id}`;\r\n        this.firstname = input.firstname || `User`;\r\n        this._toPay = 0;\r\n    }\r\n\r\n    get fullname()\r\n    {\r\n        return `${this.firstname} ${this.name}`;\r\n    }\r\n    get shortname()\r\n    {\r\n        return `${this.firstname} ${this.name[0]}.`;\r\n    }\r\n    get alias()\r\n    {\r\n        return `${this.firstname[0]}${this.name[0]}`;\r\n    }\r\n}\r\n\r\nclass Expense extends BaseJson\r\n{\r\n    constructor (input)\r\n    {\r\n        super();\r\n        this.when = input?.when || \"DD-MM-YYYY\";\r\n        this.from = input?.from || 0;\r\n        this.what = input?.what || \"-\";\r\n        this.cost = input?.cost || 0;\r\n        this.group = input?.group || GroupsEnum.Misc;\r\n        this.target = input?.target || \"All\"; // undefined means all\r\n        let id;\r\n        this._sub = 0;\r\n        if (input.id != null)\r\n        {\r\n            STATIC_EXPENSE_COUNT = Math.max(STATIC_EXPENSE_COUNT, input.id);\r\n            id = input.id;\r\n        }\r\n        else\r\n            id = ++STATIC_EXPENSE_COUNT;\r\n        this.id = id;\r\n    }\r\n\r\n}\r\n\r\nclass Data extends BaseJson\r\n{\r\n    constructor(input)\r\n    {\r\n        super();\r\n        this.info = new Info(input?.info);\r\n        this.users = {};\r\n        let hasSuper = false;\r\n        for (let u of Object.values(input?.users || {}))\r\n        {\r\n            let user = new User(u);\r\n            if (!user || user.id == null) continue;\r\n            this.users[user.id] = user;\r\n            hasSuper |= user.isSuperUser;\r\n        }\r\n        if (!hasSuper)\r\n        {\r\n            let user = new User(DEFAULT_SUPER_USER)\r\n            this.users[user.id] = user;\r\n        }\r\n        this.expenses = {};\r\n        for (let e of Object.values(input?.expenses || {}))\r\n        {\r\n            let exp = new Expense(e);\r\n            if (!exp || exp.id == null) continue;\r\n            this.expenses[exp.id] = exp;\r\n        }\r\n        this.groups = input?.groups || DEFAULT_GROUPS;\r\n        this.rules = input?.rules || DEFAULT_RULES;\r\n    }\r\n\r\n    toJson()\r\n    {\r\n        return JSON.stringify(this);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://cse_ds_hm_xls/./src/dataModel.js?");

/***/ }),

/***/ "./src/editableField.js":
/*!******************************!*\
  !*** ./src/editableField.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditableField: () => (/* binding */ EditableField)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\r\n\r\nclass EditableField\r\n{\r\n    constructor (readOnly, htmlId, field_path, front, editable, type, data)\r\n    {\r\n        this.html = htmlId instanceof HTMLElement ? htmlId : document.querySelector(htmlId);\r\n        this.path = field_path.split(\".\");\r\n        this.front = front;\r\n        this.editable = editable;\r\n        this.type = type;\r\n        this.readOnly = readOnly;\r\n        this.data = data;\r\n        this.toggle(this.readOnly);\r\n    }\r\n    getAttr()\r\n    {\r\n        try\r\n        {\r\n            return _utils__WEBPACK_IMPORTED_MODULE_0__.Utils.getAttr(this.front, this.path);\r\n        }\r\n        catch(e)\r\n        {\r\n            if (this.data && this.data.canFail)\r\n            {\r\n                return undefined;\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    setAttr(content)\r\n    {\r\n        if (this.type === \"number\")\r\n        {\r\n            content = parseFloat(content)\r\n        }\r\n        try\r\n        {\r\n            _utils__WEBPACK_IMPORTED_MODULE_0__.Utils.setAttr(this.front, this.path, content);\r\n        }\r\n        catch(e)\r\n        {\r\n            if (!this.data || !this.data.canFail)\r\n            {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle(toReadOnly, commit)\r\n    {\r\n        let targetReadOnly = toReadOnly == null ? !this.readOnly : toReadOnly;\r\n        if (!this.editable)\r\n            targetReadOnly = true;\r\n        // allow force redraw\r\n        // if (targetReadOnly == this.readOnly) return; // nothing to do\r\n        let content = this.getAttr();\r\n        let displayed = content;\r\n        if (this.data?.displayCb)\r\n        {\r\n            displayed = this.data.displayCb(content);\r\n        }\r\n        else if (content == null)\r\n        {\r\n            content = \"...\";\r\n            displayed = content;\r\n        }\r\n        if (targetReadOnly)\r\n        {\r\n            if (commit && this.editable)\r\n            {\r\n                if (this.data && this.data.onPreCommit)\r\n                {\r\n                    this.data.onPreCommit();\r\n                }\r\n                let tmp = this._setValueFromEdit();\r\n                if (tmp != null)\r\n                {\r\n                    content = tmp;\r\n                    displayed = content;\r\n                    if (this.data.displayCb) displayed = this.data.displayCb(content);\r\n                }\r\n            }\r\n            this._buildReadOnly(content, displayed)\r\n        }\r\n        else\r\n        {\r\n            this._buildEditable(content, displayed);\r\n        }\r\n        this.readOnly = targetReadOnly;\r\n    }\r\n\r\n    _buildReadOnly(content, displayed)\r\n    {\r\n        let innerhtml = displayed;\r\n        if (this.type === \"combo\")\r\n        {\r\n            let cssClasses = this.data.items[displayed];\r\n            if (cssClasses != null)\r\n            {\r\n\r\n                innerhtml = `<div class=\"d-flex align-items-center gap-2\">\r\n                <div class=\"badge ${cssClasses} rounded-3 fw-semibold\">\r\n                <span class=\"text-${cssClasses}\">${displayed}</span>\r\n                </div>\r\n                </div>`\r\n            }\r\n        }\r\n        _utils__WEBPACK_IMPORTED_MODULE_0__.Utils.setText(this.html, innerhtml);\r\n    }\r\n\r\n    _buildEditable(content, displayed)\r\n    {\r\n        let out;\r\n        if (this.type === \"icon\")\r\n        {\r\n            out = document.createElement(\"div\");\r\n            out.innerHTML = `<a class=\"text-white bg-danger rounded-circle p-2 d-flex align-items-center justify-content-center\" href=\"javascript:void(0)\">\r\n              <i class=\"${this.data.iconName} fs-6\"></i>\r\n            </a>`;\r\n            out.addEventListener(\"click\", this.data.onClick);\r\n        }\r\n        else if (this.type === \"combo\")\r\n        {\r\n            out = document.createElement(\"select\");\r\n            if (this.data.multiple)\r\n                out.setAttribute(\"multiple\", \"\");\r\n            // need to be sed before changing options\r\n            out.value = content;\r\n            for (let key of Object.keys(this.data.items))\r\n            {\r\n                let option = document.createElement(\"option\");\r\n                option.setAttribute(\"value\", key);\r\n                let displayed = key;\r\n                if (this.data.displayCb) displayed = this.data.displayCb(key);\r\n                option.innerText = displayed;\r\n                out.appendChild(option);\r\n                if (content?.includes(key))\r\n                {\r\n                    // option.setAttribute(\"selected\", \"\");\r\n                    option.selected = true;\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n\r\n            let input = document.createElement(\"input\");\r\n            input.setAttribute(\"type\", this.type);\r\n            input.setAttribute(\"placeholder\", content);\r\n            if (this.type === \"date\")\r\n            {\r\n                input.value = content;\r\n            }\r\n            out = input;\r\n        }\r\n        this.html.innerHTML = \"\"; // lazy empty\r\n        this.html.appendChild(out);\r\n    }\r\n\r\n    _setValueFromEdit()\r\n    {\r\n        let content;\r\n        let obj;\r\n        if (this.type === \"combo\")\r\n        {\r\n            obj = this.html.querySelector(`select`);\r\n            if (obj)\r\n            {\r\n                if (this.data.multiple)\r\n                {\r\n                    content = [];\r\n                    for (let opt of obj.options)\r\n                    {\r\n                        if (opt.selected)\r\n                        {\r\n                            content.push(opt.value);\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    content = obj.value;\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            obj = this.html.querySelector(`input`);\r\n            if (obj)\r\n                content = obj.value;\r\n        }\r\n        if (content != null)\r\n            this.setAttr(content);\r\n        return content;\r\n\r\n    }\r\n\r\n}\r\n\n\n//# sourceURL=webpack://cse_ds_hm_xls/./src/editableField.js?");

/***/ }),

/***/ "./src/front.js":
/*!**********************!*\
  !*** ./src/front.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FrontPage: () => (/* binding */ FrontPage)\n/* harmony export */ });\n/* harmony import */ var _clientServerManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clientServerManager */ \"./src/clientServerManager.js\");\n/* harmony import */ var _editableField__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editableField */ \"./src/editableField.js\");\n/* harmony import */ var _dataModel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dataModel */ \"./src/dataModel.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n\r\n\r\n\r\n\r\n\r\n\"use strict\";\r\n\r\nconst EditionModeEnum = {\r\n    Editable: 0x01,\r\n    ReadOnly: 0x10,\r\n}\r\nconst EditionStateEum = {\r\n    StartEdit: 0x001,\r\n    Commit: 0x010,\r\n    Abort: 0x110\r\n};\r\n\r\nconst CompanyEnumColor = Object.fromEntries([\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.CompanyEnum.DS, \"bg-primary\"],\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.CompanyEnum.DSExt, \"bg-primary\"],\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.CompanyEnum.DA, \"bg-secondary\"],\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.CompanyEnum.DAExt, \"bg-secondary\"]\r\n]);\r\n\r\nconst GroupsEnumColor = Object.fromEntries([\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.GroupsEnum.Guide, \"bg-primary\"],\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.GroupsEnum.Location, \"bg-secondary\"],\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.GroupsEnum.Transport, \"bg-success\"],\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.GroupsEnum.Logement, \"bg-warning\"],\r\n    [_dataModel__WEBPACK_IMPORTED_MODULE_2__.GroupsEnum.Misc, \"bg-dark\"]\r\n]);\r\n\r\nclass FrontPage\r\n{\r\n    constructor(clientServerManager, content)\r\n    {\r\n        this.manager = clientServerManager;\r\n        // Computed members\r\n        this._users = {};\r\n        this._nb_users = 0;\r\n        this._totalCost = 0;\r\n        this._totalSub = 0;\r\n        this._byPerson = {};\r\n        this._byGroup = {};\r\n\r\n        // UI\r\n        this.infoEditableFields = {};\r\n        this.usersEditableFields = {};\r\n        this.expensesEditableFields = {};\r\n\r\n        // Init\r\n        this.state = EditionModeEnum.ReadOnly;\r\n        // for import export\r\n        try\r\n        {\r\n            this._data = new _dataModel__WEBPACK_IMPORTED_MODULE_2__.Data(content);\r\n        }\r\n        catch(e)\r\n        {\r\n            console.error(e);\r\n            console.warn(\"Issues in the data form cache.... clear data for now\")\r\n            this._data = new _dataModel__WEBPACK_IMPORTED_MODULE_2__.Data({});\r\n        }\r\n        // compute values\r\n        this.preProcessing();\r\n    }\r\n    get readOnly()\r\n    {\r\n        return this.state & EditionModeEnum.ReadOnly;\r\n    }\r\n    /**\r\n     * preProcessing values from data\r\n     */\r\n    preProcessing()\r\n    {\r\n        this._nb_users = 0;\r\n        this._byGroup = {};\r\n        this._totalCost = 0;\r\n        this._totalSub = 0;\r\n        let nonSuperUsers = [];\r\n\r\n        for (const user of Object.values(this._data.users))\r\n        {\r\n            if (user.isSuperUser) continue;\r\n            this._nb_users++;\r\n            nonSuperUsers.push(user.id);\r\n        }\r\n        for (let exp of Object.values(this._data.expenses))\r\n        {\r\n            // person\r\n            let targetUsersIds = exp.target;\r\n            if (targetUsersIds.includes(\"All\")) targetUsersIds = nonSuperUsers;\r\n            for (let userId of targetUsersIds)\r\n            {\r\n                this._data.users[userId]._toPay -= exp.cost / this._nb_users;\r\n            }\r\n            // group\r\n            if (this._byGroup[exp.group] == null)\r\n                this._byGroup[exp.group] = { cost: 0, sub: 0};\r\n            this._byGroup[exp.group].cost += exp.cost;\r\n            this._totalCost += exp.cost;\r\n            let sub = this.applyRule(exp.group, exp.cost);\r\n            this._byGroup[exp.group].cost += sub;\r\n            this._totalSub += sub;\r\n        }\r\n    }\r\n    pushData(compute=true)\r\n    {\r\n        if (compute)\r\n            this.preProcessing();\r\n        this.manager.saveContent(this._data);\r\n    }\r\n\r\n    applyRule(group, sum)\r\n    {\r\n        const rule = this._data.rules[group];\r\n        if (rule == null) return 0;\r\n        let sub = 0;\r\n        if (rule.ratio)\r\n        {\r\n            sub = sum*rule.ratio;\r\n        }\r\n        if (rule.maxi_pp)\r\n        {\r\n            sub = Math.min(sub, self.users)\r\n        }\r\n        return sub;\r\n    }\r\n\r\n    switchToEdit(mode, push=true)\r\n    {\r\n        const readOnly = mode&EditionModeEnum.ReadOnly;\r\n        const isCancel = mode == EditionStateEum.Abort;\r\n        const isCommit = mode == EditionStateEum.Commit;\r\n        // update nav bag\r\n        _utils__WEBPACK_IMPORTED_MODULE_3__.Utils.toggleVisible(\"#info-edit-commit\", !readOnly);\r\n        _utils__WEBPACK_IMPORTED_MODULE_3__.Utils.toggleVisible(\"#info-edit-cancel\", !readOnly);\r\n        _utils__WEBPACK_IMPORTED_MODULE_3__.Utils.toggleVisible(\"#info-edit-start\", readOnly);\r\n        _utils__WEBPACK_IMPORTED_MODULE_3__.Utils.toggleVisible(\"#user-edit-add\", !readOnly);\r\n        _utils__WEBPACK_IMPORTED_MODULE_3__.Utils.toggleVisible(\"#expenses-edit-add\", !readOnly);\r\n        // Update info\r\n        this.state = mode;\r\n        if (!readOnly)\r\n        {\r\n            // start edit backup for abort\r\n            this._dataOld = this._data;\r\n            this._data = new _dataModel__WEBPACK_IMPORTED_MODULE_2__.Data(this._data);\r\n        }\r\n        else\r\n        {\r\n            if (isCancel)\r\n                this._data = this._dataOld;\r\n            this._dataOld = undefined;\r\n        }\r\n        for (let toLoop of Object.values(this.usersEditableFields))\r\n        {\r\n            for (let obj of toLoop)\r\n                obj.toggle(readOnly, isCommit);\r\n        }\r\n        for (let toLoop of Object.values(this.expensesEditableFields))\r\n        {\r\n            for (let obj of toLoop)\r\n                obj.toggle(readOnly, isCommit);\r\n        }\r\n        if (readOnly)\r\n            this.preProcessing();\r\n        for (let obj of Object.values(this.infoEditableFields))\r\n        {\r\n            obj.toggle(readOnly, isCommit);\r\n        }\r\n        this.buildSummary();\r\n        if (readOnly && push)\r\n            this.pushData(false);\r\n\r\n    }\r\n\r\n\r\n    addEventListener()\r\n    {\r\n        // build event listeners\r\n        document.getElementById(\"info-edit-start\").addEventListener(\"click\", this.switchToEdit.bind(this, EditionStateEum.StartEdit));\r\n        document.getElementById(\"info-edit-commit\").addEventListener(\"click\", this.switchToEdit.bind(this, EditionStateEum.Commit));\r\n        document.getElementById(\"info-edit-cancel\").addEventListener(\"click\", this.switchToEdit.bind(this, EditionStateEum.Abort));\r\n        document.getElementById(\"user-edit-add\").addEventListener(\"click\", this.addRowUser.bind(this, undefined));\r\n        document.getElementById(\"expenses-edit-add\").addEventListener(\"click\", this.addRowExpense.bind(this, undefined));\r\n    }\r\n\r\n    buildInfo()\r\n    {\r\n        for (const [id, path, editable, type] of [\r\n            [\"#info-title\", \"_data.info.title\", true, \"text\"],\r\n            [\"#info-where\", \"_data.info.destination\", true, \"text\"],\r\n            [\"#info-type\", \"_data.info.type\", true, \"text\"],\r\n            [\"#info-start-date\", \"_data.info.start\", true, \"date\"],\r\n            [\"#info-end-date\", \"_data.info.end\", true, \"date\"],\r\n            [\"#info-resp\", \"_data.info.responsible\", true, \"text\"],\r\n            [\"#info-nb-users\", \"_nb_users\", false, \"text\"]\r\n        ])\r\n        {\r\n            this.infoEditableFields[id] = new _editableField__WEBPACK_IMPORTED_MODULE_1__.EditableField(this.readOnly, id, path, this, editable, type);\r\n        }\r\n    }\r\n\r\n    buildSummary()\r\n    {\r\n        _utils__WEBPACK_IMPORTED_MODULE_3__.Utils.setText(\"#info-spent\", this._totalCost);\r\n        _utils__WEBPACK_IMPORTED_MODULE_3__.Utils.setText(\"#info-sub\", this._totalSub);\r\n        let val = this._nb_users ? (this._totalCost - this._totalSub) / this._nb_users : 0;\r\n        val = Math.round(val*100) / 100;\r\n        _utils__WEBPACK_IMPORTED_MODULE_3__.Utils.setText(\"#info-avg\", val);\r\n    }\r\n\r\n    buildUsers()\r\n    {\r\n        let tbody = document.querySelector(\"#users-table tbody\")\r\n        tbody.innerHTML = \"\";\r\n        for (let idx of Object.keys(this._data.users))\r\n        {\r\n            this.addRowUser(idx);\r\n        }\r\n    }\r\n\r\n    addRowUser(idx)\r\n    {\r\n        let user;\r\n        if (idx == null)\r\n        {\r\n            user = new _dataModel__WEBPACK_IMPORTED_MODULE_2__.User({});\r\n            idx = user.id;\r\n            this._data.users[idx] =user;\r\n        }\r\n        else\r\n        {\r\n            user = this._data.users[idx];\r\n        }\r\n        let tbody = document.querySelector(\"#users-table tbody\");\r\n        let tr = document.createElement(\"tr\");\r\n        let fields = [];\r\n        // action\r\n        for (let [key, editable, type, data] of [\r\n            [\"id\", true, \"icon\", {\r\n                iconName:\"ti ti-trash\" ,\r\n                onClick : ()=>this.removeUser(idx),\r\n                canFail: true\r\n            }],\r\n            [\"firstname\", true, \"text\", {canFail: true}],\r\n            [\"name\", true, \"text\", {canFail: true}],\r\n            [\"company\", true, \"combo\", { items : CompanyEnumColor, canFail: true}],\r\n            [\"toPay\", false, \"text\", {canFail: true}],\r\n        ])\r\n        {\r\n            let td = document.createElement(\"td\");\r\n            td.className = \"boder-bottom-0\";\r\n            let field = new _editableField__WEBPACK_IMPORTED_MODULE_1__.EditableField(this.readOnly, td, `_data.users.${idx}.${key}`, this, editable && !user.isSuperUser, type, data);\r\n            tr.appendChild(td);\r\n            fields.push(field);\r\n        }\r\n        this.usersEditableFields[`user_${idx}`] = fields;\r\n        tbody.appendChild(tr);\r\n    }\r\n\r\n    removeUser(idx)\r\n    {\r\n        delete this._data.users[idx];\r\n        let editables = this.usersEditableFields[`user_${idx}`];\r\n        let first = editables[0];\r\n        let torm = first.html.parentElement;\r\n        torm.parentElement.removeChild(torm);\r\n    }\r\n\r\n    buildExpenses()\r\n    {\r\n        let tbody = document.querySelector(\"#expenses-table tbody\")\r\n        tbody.innerHTML = \"\";\r\n        for (let idx of Object.keys(this._data.expenses))\r\n        {\r\n            this.addRowExpense(idx);\r\n        }\r\n    }\r\n    addRowExpense(idx)\r\n    {\r\n\r\n        let exp;\r\n        if (idx == null)\r\n        {\r\n            exp = new _dataModel__WEBPACK_IMPORTED_MODULE_2__.Expense({});\r\n            idx = exp.id;\r\n            this._data.expenses[idx] = exp;\r\n        }\r\n        else\r\n        {\r\n            exp = this._data.expenses[idx];\r\n        }\r\n        let tbody = document.querySelector(\"#expenses-table tbody\");\r\n        let tr = document.createElement(\"tr\");\r\n        let fields = [];\r\n        let usersFrom = {};\r\n        let usersTo= { \"All\" : \"badge bg-primary\"};\r\n        for (let user of Object.values(this._data.users))\r\n        {\r\n            usersFrom[user.id] = null; // mandatory\r\n            if (user.isSuperUser) continue;\r\n            usersTo[user.id] = null; // mandatory\r\n        }\r\n        // action\r\n        for (let [key, type, data] of [\r\n            [\"id\", \"icon\", {\r\n                iconName:\"ti ti-trash\" ,\r\n                onClick : ()=>this.removeExpense(idx),\r\n                canFail: true\r\n            }],\r\n            [\"when\", \"date\", {canFail: true}],\r\n            [\"what\", \"text\", {canFail: true}],\r\n            [\"cost\", \"number\", {canFail: true}],\r\n            [\"group\", \"combo\", { items : GroupsEnumColor, canFail: true}],\r\n            [\"from\", \"combo\", {\r\n                items : usersFrom, canFail: true,\r\n                displayCb: (idx)=>this._data.users[idx].fullname\r\n            }],\r\n            [\"target\",  \"combo\", {\r\n                items: usersTo, canFail: true,\r\n                multiple: true,\r\n                displayCb: (idx)=>{\r\n                    if (idx === \"All\" || idx?.includes(\"All\")) return \"Tous\";\r\n                    if (Array.isArray(idx))\r\n                    {\r\n                        return idx.map(x=>this._data.users[x].alias).join(\", \")\r\n                    }\r\n                    return this._data.users[idx].alias;\r\n                }\r\n            }],\r\n        ])\r\n        {\r\n            let td = document.createElement(\"td\");\r\n            td.className = \"boder-bottom-0\";\r\n            let field = new _editableField__WEBPACK_IMPORTED_MODULE_1__.EditableField(this.readOnly, td, `_data.expenses.${idx}.${key}`, this, true, type, data);\r\n            tr.appendChild(td);\r\n            fields.push(field);\r\n        }\r\n        this.expensesEditableFields[idx] = fields;\r\n        tbody.appendChild(tr);\r\n    \r\n    }\r\n    removeExpense(idx)\r\n    {\r\n\r\n    }\r\n\r\n    static async main()\r\n    {\r\n        let manager = new _clientServerManager__WEBPACK_IMPORTED_MODULE_0__.ClientServerManager();\r\n        let content = await manager.fetchSavedContent();\r\n        let front = new FrontPage(manager, content);\r\n        console.log(front)\r\n        window.front = front;\r\n\r\n        front.buildInfo();\r\n        front.buildSummary();\r\n        front.buildUsers();\r\n        front.buildExpenses();\r\n        front.addEventListener();\r\n        front.switchToEdit(EditionStateEum.Commit, false);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://cse_ds_hm_xls/./src/front.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _front__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./front */ \"./src/front.js\");\n\r\n\r\n_front__WEBPACK_IMPORTED_MODULE_0__.FrontPage.main();\n\n//# sourceURL=webpack://cse_ds_hm_xls/./src/index.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Utils: () => (/* binding */ Utils)\n/* harmony export */ });\n\r\nclass Utils\r\n{\r\n    static applyRule(group, sum, rules, nb_p=0)\r\n    {\r\n        const rule = rules[group];\r\n        if (rule == null) return sum;\r\n\r\n    }\r\n\r\n    static getElems(id)\r\n    {\r\n        let out = id  instanceof HTMLElement ? [id ] : document.querySelectorAll(id);\r\n        if (out.length === 0) throw new Error(\"Empty selection\");\r\n        return out;\r\n    }\r\n    static setText(id, content)\r\n    {\r\n        for (let elem of Utils.getElems(id))\r\n            elem.innerHTML = content;\r\n    }\r\n\r\n    static toggleVisible(id, visible)\r\n    {\r\n        for (let elem of Utils.getElems(id))\r\n            elem.style.display = visible ? \"flex\" : \"none\";\r\n    }\r\n\r\n    static setAttr(obj, path, val)\r\n    {\r\n        let tmp = obj;\r\n        for (let i=0;i<path.length;i++)\r\n        {\r\n            if (i===path.length-1)\r\n            {\r\n                tmp[path[i]] = val;\r\n            }\r\n            tmp = tmp[path[i]];\r\n        }\r\n    }\r\n    static getAttr(obj, path)\r\n    {\r\n        let tmp = obj;\r\n        for (let i=0;i<path.length;i++)\r\n        {\r\n            if (i===path.length-1)\r\n            {\r\n                return tmp[path[i]];\r\n            }\r\n            tmp = tmp[path[i]];\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://cse_ds_hm_xls/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;